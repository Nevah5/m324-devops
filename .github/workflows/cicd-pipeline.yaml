name: "CI/CD Pipeline"

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    name: üî® Build and push
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
      - name: üìê Setup AWS CLI
        uses: ./.github/actions/setup-ecr
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_ECR_REGISTRY: ${{ vars.AWS_ECR_REGISTRY }}
      - name: üöß Build docker image
        run: |
          docker build -t ${{ vars.AWS_ECR_REPOSITORY_NAME }} .
          docker tag ${{ vars.AWS_ECR_REPOSITORY_NAME }} ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY_NAME }}:${{ vars.VERSION }}
      - name: üéØ Push docker image
        run: |
          docker push ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY_NAME }}:${{ vars.VERSION }}
      - name: üïî Push latest tag
        if: ${{ github.ref_name == 'develop' }}
        run: |
          docker tag ${{ vars.AWS_ECR_REPOSITORY_NAME }} ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY_NAME }}:latest
          docker push ${{ vars.AWS_ECR_REGISTRY }}/${{ vars.AWS_ECR_REPOSITORY_NAME }}:latest
  create-release:
    name: Create GitHub Release
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
      - name:
        run: |
          git config --global user.name "CI/CD Pipeline"
          git config --global user.email "contact@nevah5.dev"
      - name: üè∑Ô∏è Create tag
        run: |
          git tag -a ${{ vars.VERSION }} -m "Version ${{ vars.VERSION }}"
          git push --tags
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ vars.VERSION }}
          name: Version ${{ vars.VERSION }}
          generateReleaseNotes: true
